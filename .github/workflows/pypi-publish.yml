name: Upload Python Package

on:
  release:
    types: [published]
  # Allow manual running from the GitHub UI
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag to publish (e.g., '1.2.3')"
        required: true

permissions:
  contents: read
  id-token: write # Required for trusted publishing to PyPI

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Read version
        run: |
          PACKAGE_VERSION=$(poetry version -s)
          if [ "$PACKAGE_VERSION" != "${{ github.event.inputs.version || github.ref }}" ]; then
            echo "pyproject.toml version $PACKAGE_VERSION does not match tag ${{ github.event.inputs.version || github.ref }}."
            echo "Run 'poetry version ${{ github.event.inputs.version || github.ref }}' and commit the changes."
            echo "Then, delete, and recreate the tag with the correct version in pyproject.toml"
            exit 1
          else
            echo "Version $PACKAGE_VERSION confirmed"
          fi

      - name: Build package
        run: |
          poetry build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dist
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    environment:
      name: pypi
      url: https://pypi.org/p/sf-toolkit

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dist
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
